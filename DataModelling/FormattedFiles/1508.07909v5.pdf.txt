In this paper, we introduce a simpler and more effective approach, making the NMT model capable of open-vocabulary translation by encoding rare and unknown words as sequences of subword units.
We discuss the suitability of different word segmentation techniques, including simple character ngram models and a segmentation based on the byte pair encoding compression algorithm, and empirically show that subword models improve over a back-off dictionary baseline for the WMT 15 translation tasks English→German and English→Russian by up to 1.1 and 1.3 BLEU, respectively.
We note that such techniques make assumptions that often do not hold true in practice.
For instance, there is not always a 1-to-1 correspondence between source and target words because of variance in the degree of morphological synthesis between languages, like in our introductory compounding example.
We investigate NMT models that operate on the level of subword units.
Our main goal is to model open-vocabulary translation in the NMT network itself, without requiring a back-off model for rare words.
In addition to making the translation process simpler, we also ﬁnd that the subword models achieve better accuracy for the translation of rare words than large-vocabulary models and back-off dictionaries, and are able to productively generate new words that were not seen at training time.
Our analysis shows that the neural networks are able to learn compounding and transliteration from subword representations.
This paper has two main contributions: • We show that open-vocabulary neural mathat they are translatable by a competent translator even if they are novel to him or her, based on a translation of known subword units such as morphemes or phonemes.
We ﬁnd our architecture simpler and more effective than using large vocabularies and back-off dictionaries (Jean et al., 2015; Luong et al., 2015b).
• We adapt byte pair encoding (BPE) (Gage, 1994), a compression algorithm, to the task of word segmentation.
We follow the neural machine translation architecture by Bahdanau et al.
(2015), which we will brieﬂy summarize here.
However, we note that our approach is not speciﬁc to this architecture.
Example: solar system (English) Sonnensystem (Sonne + System) (German) Naprendszer (Nap + Rendszer) (Hungarian) In an analysis of 100 rare tokens (not among the 50 000 most frequent types) in our German training data1, the majority of tokens are potentially translatable from English through smaller units.
We ﬁnd 56 compounds, 21 names, 6 loanwords with a common origin (emancipate→emanzipieren), 5 cases of transparent afﬁxation (sweetish ‘sweet’ + ‘-ish’ → süßlich ‘süß’ + ‘-lich’), 1 number and 1 computer language identiﬁer.
Our hypothesis is that a segmentation of rare words into appropriate subword units is sufﬁcient to allow for the neural translation network to learn transparent translations, and to generalize this knowledge to translate and produce unseen words.2 We provide empirical support for this hytion on different subword units at each step.
Recall our introductory example Abwasserbehandlungsanlange, for which a subword segmentation avoids the information bottleneck of a ﬁxed-length representation.
2Not every segmentation we produce is transparent.
While we expect no performance beneﬁt from opaque segmentations, i.e.
segmentations where the units cannot be translated independently, our NMT models show robustness towards oversplitting.
First, we discuss different subword representations.
Segmentation algorithms commonly used for phrase-based SMT tend to be conservative in their splitting decisions, whereas we aim for an aggressive segmentation that allows for open-vocabulary translation with a compact network vocabulary, and without having to resort to back-off dictionaries.
We ﬁnd these intriguing, but inapplicable at test time.
One technical difference from our work is that the attention mechanism still operates on the level of words in the model by Ling et al.
We expect that the attention mechanism beneﬁts from our variable-length representation: the network can learn to place attenpairs = collections.defaultdict(int) for word, freq in vocab.items(): Neural machine translation differs from phrasebased methods in that there are strong incentives to minimize the vocabulary size of neural models to increase time and space efﬁciency, and to allow for translation without back-off models.
At the same time, we also want a compact representation of the text itself, since an increase in text length reduces efﬁciency and increases the distances over which neural models need to pass information.
As an alternative, we propose a segmentation algorithm based on byte pair encoding (BPE), which lets us learn a vocabulary that provides a good compression rate of the text.
We adapt this algorithm for word segmentation.
Instead of merging frequent pairs of bytes, we merge characters or character sequences.
Firstly, we initialize the symbol vocabulary with the character vocabulary, and represent each word as a sequence of characters, plus a special end-ofword symbol ‘·’, which allows us to restore the original tokenization after translation.
We iteratively count all symbol pairs and replace each occurrence of the most frequent pair (‘A’, ‘B’) with a new symbol ‘AB’.
For efﬁciency, we do not consider pairs that cross word boundaries.
In practice, we increase efﬁciency by indexing all pairs, and updating data structures incrementally.
The main difference to other compression algorithms, such as Huffman encoding, which have been proposed to produce a variable-length encoding of words for NMT (Chitnis and DeNero, 2015), is that our symbol sequences are still interpretable as subword units, and that the network can generalize to translate and produce new words (unseen at training time) on the basis of these subword units.
At test time, we ﬁrst split words into sequences of characters, then apply the learned operations to merge the characters into larger, known symbols.
This is applicable to any word, and allows for open-vocabulary networks with ﬁxed symbol vocabularies.3 In our example, the OOV ‘lower’ would be segmented into ‘low er·’.
3The only symbols that will be unknown at test time are unknown characters, or symbols of which all occurrences in the training text have been merged into larger symbols, like ‘safeguar’, which has all occurrences in our training text merged into ‘safeguard’.
We observed no such symbols at test time, but the issue could be easily solved by recursively reversing speciﬁc merges until all symbols are known.
We evaluate two methods of applying BPE: learning two independent encodings, one for the source, one for the target vocabulary, or learning the encoding on the union of the two vocabularies (which we call joint BPE).4 The former has the advantage of being more compact in terms of text and vocabulary size, and having stronger guarantees that each subword unit has been seen in the training text of the respective language, whereas the latter improves consistency between the source and the target segmentation.
If we apply BPE independently, the same name may be segmented differently in the two languages, which makes it harder for the neural models to learn a mapping between the subword units.
To increase the consistency between English and Russian segmentation despite the differing alphabets, we transliterate the Russian vocabulary into Latin characters with ISO-9 to learn the joint BPE encoding, then transliterate the BPE merge operations back into Cyrillic to apply them to the Russian training text.5 We aim to answer the following empirical questions: • Can we improve the translation of rare and unseen words in neural machine translation by representing them via subword units? • Which segmentation into subword units performs best in terms of vocabulary size, text size, and translation quality? We perform experiments on data from the shared translation task of WMT 2015.
For English→German, our training set consists of 4.2 million sentence pairs, or approximately 100 million tokens.
We tokenize and truecase the data with the scripts provided in Moses (Koehn et al., 2007).
We use newstest2013 as development set, and report results on newstest2014 and newstest2015.
We report results with BLEU (mteval-v13a.pl), and CHRF3 (Popovi´c, 2015), a character n-gram F3 score which was found to correlate well with 4In practice, we simply concatenate the source and target side of the training set to learn joint BPE.
5Since the Russian training text also contains words that use the Latin alphabet, we also apply the Latin BPE operations.
Since our main claim is concerned with the translation of rare and unseen words, we report separate statistics for these.
We measure these through unigram F1, which we calculate as the harmonic mean of clipped unigram precision and recall.6 We perform all experiments with Groundhog7 (Bahdanau et al., 2015).
We generally follow settings by previous work (Bahdanau et al., 2015; Jean et al., 2015).
(2015), we only keep a shortlist of τ = 30000 words in memory.
During training, we use Adadelta (Zeiler, 2012), a minibatch size of 80, and reshufﬂe the training set between epochs.
We train a network for approximately 7 days, then take the last 4 saved models (models being saved every 12 hours), and continue training each with a ﬁxed embedding layer (as suggested by (Jean et al., 2015)) for 12 hours.
We perform two independent training runs for each models, once with cut-off for gradient clipping (Pascanu et al., 2013) of 5.0, once with a cut-off of 1.0 – the latter produced better single models for most settings.
We report results of the system that performed best on our development set (newstest2013), and of an ensemble of all 8 models.
We use a beam size of 12 for beam search, with probabilities normalized by sentence length.
We use a bilingual dictionary based on fast-align (Dyer et al., 2013).
For our baseline, this serves as back-off dictionary for rare words.
We also use the dictionary to speed up translation for all experiments, only performing the softmax over a ﬁltered list of candidate translations (like Jean et al.
(2015), we use K = 30000; K ′ = 10).
Apart from translation quality, which we will verify empirically, our main objective is to represent an open vocabulary through a compact ﬁxed-size subword vocabulary, and allow for efﬁcient training and decoding.8 Statistics for different segmentations of the German side of the parallel data are shown in Table 1.
However, the unigram representation performed poorly in preliminary experiments, and we report translation results with a bigram representation, which is empirically better, but unable to produce some tokens in the test set with the training set vocabulary.
We report statistics for several word segmentation techniques that have proven useful in previous SMT research, including frequency-based compound splitting (Koehn and Knight, 2003), rulebased hyphenation (Liang, 1983), and Morfessor (Creutz and Lagus, 2002).
We ﬁnd that they only moderately reduce vocabulary size, and do not solve the unknown word problem, and we thus ﬁnd them unsuitable for our goal of open-vocabulary translation without back-off dictionary.
BPE meets our goal of being open-vocabulary, and the learned merge operations can be applied to the test set to obtain a segmentation with no unknown symbols.10 Its main difference from the character-level model is that the more compact representation of BPE allows for shorter sequences, and that the attention model operates on variable-length units.11 Table 1 shows BPE with 59 500 merge operations, and joint BPE with 89 500 operations.
In practice, we did not include infrequent subword units in the NMT network vocabulary, since there is noise in the subword symbol sets, e.g.
Hence, our network vocabularies in Table 2 are typically slightly smaller than the number of types in Table 1.
We mark whether a subword is word-ﬁnal or not with a special character, which allows us to restore the original tokenization.
Our baseline WDict is a word-level model with a back-off dictionary.
We ﬁrst focus on unigram F1, where all systems improve over the baseline, especially for rare words (36.8%→41.8% for EN→DE; 26.5%→29.7% for EN→RU).
Our subword representations cause big improvements in the translation of rare and unseen words, but these only constitute 9-11% of the test sets.
Since rare words tend to carry central information in a sentence, we suspect that BLEU and CHRF3 underestimate their effect on translation quality.
Still, we also see improvements over the baseline in total unigram F1, as well as BLEU and CHRF3, and the subword ensembles outperform the WDict baseline by 0.3–1.3 BLEU and 0.6–2 CHRF3.
There is some inconsistency between BLEU and CHRF3, which we attribute to the fact that BLEU has a precision bias, and CHRF3 a recall bias.
For English→German, we observe the best BLEU score of 25.3 with C2-50k, but the best CHRF3 score of 54.1 with BPE-J90k.
For comparison to the (to our knowledge) best non-neural MT system on this data set, we report syntaxbased SMT results (Sennrich and Haddow, 2015).
We observe that our best systems outperform the syntax-based system in terms of BLEU, but not in terms of CHRF3.
(2015a) report a BLEU score of 25.9 on newstest2015, but we note that they use an ensemble of 8 independently trained models, and also report strong improvements from applying dropout, which we did not use.
We are conﬁdent that our improvements to the translation of rare words are orthogonal to improvements achievable through other improvements in the network archithe state of the art is the phrase-based system by Haddow et al.
It outperforms our WDict baseline by 1.5 BLEU.
As a further comment on our translation results, we want to emphasize that performance variability is still an open problem with NMT.
On our development set, we observe differences of up to 1 BLEU between different models.
For single systems, we report the results of the model that performs best on dev (out of 8), which has a stabilizing effect, but how to control for randomness deserves further attention in future research.
Our main claims are that the translation of rare and unknown words is poor in word-level NMT models, and that subword models improve the translation of these word types.
To further illustrate the effect of different subword segmentations on the translation of rare and unseen words, we plot target-side words sorted by their frequency in the training set.13 To analyze the effect of vocabulary size, we also include the system C2-3/500k, which is a system with the same vocabulary size as the WDict baseline, and character bigrams to represent unseen words.
We ﬁnd that the performance of C2-3/500k degrades heavily up to frequency rank 500 000, at which point the model switches to a subword representation and performance recovers.
We attribute this to the fact that subword units are less sparse than words.
In our training set, the frequency rank 50 000 corresponds to a frequency of 60 in the training data; the frequency rank 500 000 to a frequency of 2.
We note that the character bigram model C2-50k produces the most OOV words, and achieves relatively low precision of 29.1% for this category.
If the systems have failed to learn a translation due to data sparseness, like for asinine, which should be translated as dumm, we see translations that are wrong, but could be plausible for (partial) loanwords (asinine Situation→Asinin-Situation).
This example is still translated correctly, but we observe spurious insertions and deletions of characters in the BPE-60k system.
We trace this error back to translation pairs in the training data with inconsistent segmentations, such as (p|rak|ri|ti→пра|крит|и sentence system health research institutes source reference Gesundheitsforschungsinstitute Forschungsinstitute WDict C2-50k Fo|rs|ch|un|gs|in|st|it|ut|io|ne|n Gesundheits|forsch|ungsinstitu|ten BPE-60k Gesundheits|forsch|ungsin|stitute BPE-J90k asinine situation source reference dumme Situation asinine situation → UNK → asinine WDict as|in|in|e situation → As|in|en|si|tu|at|io|n C2-50k BPE-60k as|in|ine situation → A|in|line-|Situation BPE-J90K as|in|ine situation → As|in|in-|Situation Table 4: English→German translation example.
In this work, our choice of vocabulary size is somewhat arbitrary, and mainly motivated by comparison to prior work.
One avenue of future research is to learn the optimal vocabulary size for a translation task, which we expect to depend on the language pair and amount of training data, automatically.
We also believe there is further potential in bilingually informed segmentation algorithms to create more alignable subword units, although the segmentation algorithm cannot rely on the target text at runtime.
While the relative effectiveness will depend on language-speciﬁc factors such as vocabulary size, we believe that subword segmentations are suitable for most language pairs, eliminating the need for large NMT vocabularies or back-off models.
We thank Maja Popovi´c for her implementation of CHRF, with which we veriﬁed our reimplementation.
The main contribution of this paper is that we show that neural machine translation systems are capable of open-vocabulary translation by representing rare and unseen words as a sequence of subword units.14 This is both simpler and more effective than using a back-off translation model.
We introduce a variant of byte pair encoding for word segmentation, which is capable of encoding open vocabularies with a compact symbol vocabulary of variable-length subword units.
We show performance gains over the baseline with both BPE segmentation, and a simple character bigram segmentation.
Our analysis shows that not only out-ofvocabulary words, but also rare in-vocabulary words are translated poorly by our baseline NMT the segmentation algorithms is available at https://github.com/rsennrich/ subword-nmt.
Can We Translate Letters? In Second Workshop on Statistical Machine Translation, pages 33– 39, Prague, Czech Republic